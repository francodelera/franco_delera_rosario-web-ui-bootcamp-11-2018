* {
    box-sizing: border-box;
}

*, *::before, *::after { /* this recommendation was taken from: https://adamschwartz.co/magic-of-css/chapters/1-the-box/ */
    box-sizing: inherit
}

html {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: bolder;
    font-size: 20px;
    background: black;
}

h1, .rights {
    color: white;
    text-align: center;
}

.rights {
    font-size: 11px;
    font-weight: lighter;
    margin: 3px;
}

.grid {
height: 100%; /*original: 634px */
width: 74%; /*original: 956px */
position: relative;
margin: auto;
}

.box {
height: 49%;
width: 24,99%;
background-color: black;
display: block;
float: left;
z-index: 1;
}

/* Styling the span element inside the boxes */

.box .box-child span {
    background-color: rgba(0,0,0,0);
    display: block;
    font-weight: bold;
    color: transparent;
    width: 239px;
    height: 321px;
    position: absolute;
    transform: translateY(-321px); /* moving all the span elements upwards to match the images */
    margin-top: 0;
    text-align: center;
    float: left;
    z-index: 0;
    transition-property: font-size; /* added transition effect that uses font-size as its property */
    transition-duration: 0.3s;
    transition-delay: 0.2s;
  }

  .break {
      clear: both; /* clearing the floats, to allow next elements to behave like the normal flow of the document */
  }

/* Effects */

.box .box-child span:hover {
    background-color: rgba(0,0,0,.4); /* added transparency to the boxes */
    cursor: pointer;
    color: white;
    text-shadow: 1px 1px 5px black;
    font-size: 25px;
    transition-delay: 0.2s; 
    display: flex; /* this was possible thanks to the <span> element rather than <p> element which made almost impossible to align items vertically */
    align-items: center; /* aligning items vertically */
    justify-content: center; /* aligning items horizontally */
  }

  /* Media Queries */

  @media screen and (max-width: 645px) {
    h1  {
        text-align: left;
    }
}
